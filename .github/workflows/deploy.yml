name: deploy service

on:
  push: # 워크플로우 실행 조건 이벤트
    branches: # 워크플로우 실행 조건 브렌치
      - main

jobs:
  ssh-agent: # job 이름
    runs-on: ubuntu-24.04 # github 워크스페이스 환경

    steps: # 실행할 작업(step)
      - name: Checkout code
        uses: actions/checkout@v4

      - name: run ssh-agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 원격 서버를 신뢰할 수 있는 서버로 등록하는 과정
      # known_hosts : 원격 서버들의 지문이 저장된 파일
      # port를 변경했기 때문에 -p {{ secrets.SSH_PORT }} 입력한 것
      - name: Add Remote Server Fingerprint to Known Hosts
        run: ssh-keyscan -H -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST}} >> ~/.ssh/known_hosts || true

      - name: Create .env file
        run: |
          echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
          echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" >> .env

      - name: Docker Image Build
        run: docker compose build

      - name: Login DockerHub
        run: echo '${{ secrets.DOCKER_PASSWORD}}' | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin

      - name: Docker Image Push
        run: docker compose push

      # 파일 복붙
      - name: Copy .env / docker-compose.yml
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME}}
          key: ${{ secrets.SSH_PRIVATE_KEY}}
          source: 'docker-compose.yml, .env'
          target: '~/work-directory'

      - name: Pull Image & Up Container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME}}
          key: ${{ secrets.SSH_PRIVATE_KEY}}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ~/work-directoty
            docker compose pull
            docker compose up -d
