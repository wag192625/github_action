worker_processes 1;

events {
    worker_connections 1024;
}

http { 
    include       mime.types;
    default_type  application/json;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for" '
                'to "$upstream_addr"';
                
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log debug;

    keepalive_timeout 60;

    gzip_static on;
    gzip_vary on;

    server {
        listen 443 ssl http2;
        # http2 on; #신버전에서는 http2를 따로 씀
        server_name 52.78.68.206.sslip.io;

        # SSL 설정
        # 인증서와 공개키 파일
        ssl_certificate /etc/letsencrypt/live/52.78.68.206.sslip.io/fullchain.pem;
        # 개인키 파일
        ssl_certificate_key /etc/letsencrypt/live/52.78.68.206.sslip.io/privkey.pem;

        # SSL 보안 설정
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers on;

        root /usr/share/nginx/html;
        index index.html;

        location / {
          index index.html;
          try_files $uri /index.html;
        }

        location /api/ {
            proxy_pass http://backend-container:8080;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    server {
        listen 80;
        server_name localhost;

        root /usr/share/nginx/html;
        index index.html;

        location / {
          index index.html;
          try_files $uri /index.html;
        }

        location /api/ {
            proxy_pass http://backend-container:8080;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}